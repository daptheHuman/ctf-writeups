/
type=rizin rz-db project
version=16

/core
blocksize=0x400
offset=0x15d0

/core/analysis

/core/analysis/blocks
0x1000={"size":20,"jump":4118,"fail":4116,"traced":true,"ninstr":5,"op_pos":[4,8,15,18],"sp_delta":[0,8,8,8,8],"sp":0}
0x1014={"size":2,"jump":4118,"ninstr":1,"sp":8}
0x1016={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[-8,-16],"sp":8}
0x10e0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x10f0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1100={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1110={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1120={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1130={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1140={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1150={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1160={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1170={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1180={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1190={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x11a0={"size":46,"traced":true,"ninstr":12,"op_pos":[4,6,9,10,13,17,18,19,26,33,40],"sp_delta":[0,0,0,-8,-8,-8,0,8,8,8,8,8],"sp":0}
0x11d0={"size":19,"jump":4600,"fail":4579,"traced":true,"ninstr":4,"op_pos":[7,14,17],"sp_delta":[0,0,0,0],"sp":0}
0x11e3={"size":12,"jump":4600,"fail":4591,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":0}
0x11ef={"size":2,"ninstr":1,"sp":0}
0x11f8={"size":1,"ninstr":1,"sp":0}
0x1200={"size":36,"jump":4664,"fail":4644,"traced":true,"ninstr":9,"op_pos":[7,14,17,20,24,28,31,34],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":0}
0x1224={"size":12,"jump":4664,"fail":4656,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":0}
0x1230={"size":2,"ninstr":1,"sp":0}
0x1238={"size":1,"ninstr":1,"sp":0}
0x1240={"size":13,"jump":4728,"fail":4685,"traced":true,"ninstr":3,"op_pos":[4,11],"sp_delta":[0,0,0],"sp":0}
0x124d={"size":14,"jump":4711,"fail":4699,"traced":true,"ninstr":4,"op_pos":[1,9,12],"sp_delta":[8,8,8,8],"sp":0}
0x125b={"size":12,"jump":4711,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":8}
0x1267={"size":14,"traced":true,"ninstr":4,"op_pos":[5,12,13],"sp_delta":[0,0,-8,-16],"sp":8}
0x1278={"size":1,"ninstr":1,"sp":0}
0x1280={"size":9,"jump":4608,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1289={"size":75,"jump":4828,"fail":4820,"traced":true,"ninstr":18,"op_pos":[4,5,8,12,21,25,27,34,39,44,48,51,58,63,68,71,73],"sp_delta":[0,8,8,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"sp":0}
0x12d4={"size":8,"jump":4852,"fail":4828,"traced":true,"ninstr":3,"op_pos":[3,6],"sp_delta":[0,0,0],"sp":24,"cmpval":31}
0x12dc={"size":24,"jump":4852,"traced":true,"ninstr":5,"op_pos":[7,12,17,22],"sp_delta":[0,0,0,0,0],"sp":24}
0x12f4={"size":15,"jump":4872,"fail":4867,"traced":true,"ninstr":3,"op_pos":[4,13],"sp_delta":[0,0,0],"sp":24}
0x1303={"size":5,"ninstr":1,"sp":24}
0x1308={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x130a={"size":87,"jump":4966,"fail":4961,"traced":true,"ninstr":19,"op_pos":[4,5,8,12,21,25,27,34,39,44,48,51,58,63,68,72,76,85],"sp_delta":[0,8,8,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"sp":0}
0x1361={"size":5,"ninstr":1,"sp":24}
0x1366={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x1368={"size":31,"jump":5059,"fail":4999,"traced":true,"ninstr":9,"op_pos":[4,5,8,12,17,22,25,29],"sp_delta":[0,8,8,40,40,40,40,40,40],"sp":0}
0x1387={"size":60,"jump":5060,"traced":true,"ninstr":14,"op_pos":[5,10,14,18,21,26,30,33,35,43,50,54,58],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x13c3={"size":1,"jump":5060,"traced":true,"ninstr":1,"sp":40}
0x13c4={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-40,-48],"sp":40}
0x13c6={"size":31,"jump":5133,"fail":5093,"traced":true,"ninstr":9,"op_pos":[4,5,8,12,17,22,25,29],"sp_delta":[0,8,8,24,24,24,24,24,24],"sp":0}
0x13e5={"size":6,"jump":5133,"fail":5099,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":31}
0x13eb={"size":34,"jump":5134,"traced":true,"ninstr":8,"op_pos":[3,5,13,20,24,27,32],"sp_delta":[0,0,0,0,0,0,0,0],"sp":24}
0x140d={"size":1,"jump":5134,"traced":true,"ninstr":1,"sp":24}
0x140e={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x1410={"size":31,"jump":5283,"fail":5167,"traced":true,"ninstr":9,"op_pos":[4,5,8,12,17,22,25,29],"sp_delta":[0,8,8,40,40,40,40,40,40],"sp":0}
0x142f={"size":72,"jump":5253,"fail":5239,"traced":true,"ninstr":17,"op_pos":[3,5,13,20,24,28,33,38,42,46,50,53,56,61,65,70],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":40}
0x1477={"size":14,"jump":5284,"traced":true,"ninstr":3,"op_pos":[7,12],"sp_delta":[0,0,0],"sp":40}
0x1485={"size":30,"jump":5284,"traced":true,"ninstr":7,"op_pos":[3,5,13,20,24,28],"sp_delta":[0,0,0,0,0,0,0],"sp":40}
0x14a3={"size":1,"jump":5284,"traced":true,"ninstr":1,"sp":40}
0x14a4={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-40,-48],"sp":40}
0x14a6={"size":31,"jump":5351,"fail":5317,"traced":true,"ninstr":9,"op_pos":[4,5,8,12,17,22,25,29],"sp_delta":[0,8,8,24,24,24,24,24,24],"sp":0}
0x14c5={"size":34,"jump":5352,"traced":true,"ninstr":8,"op_pos":[3,5,13,20,24,27,32],"sp_delta":[0,0,0,0,0,0,0,0],"sp":24}
0x14e7={"size":1,"jump":5352,"traced":true,"ninstr":1,"sp":24}
0x14e8={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x14ea={"size":31,"jump":5443,"fail":5385,"traced":true,"ninstr":9,"op_pos":[4,5,8,12,17,22,25,29],"sp_delta":[0,8,8,24,24,24,24,24,24],"sp":0}
0x1509={"size":58,"jump":5444,"traced":true,"ninstr":14,"op_pos":[5,10,13,16,19,22,24,32,39,43,46,51,56],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":24}
0x1543={"size":1,"jump":5444,"traced":true,"ninstr":1,"sp":24}
0x1544={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[-24,-32],"sp":24}
0x1546={"size":12,"jump":5458,"traced":true,"ninstr":4,"op_pos":[4,5,8],"sp_delta":[0,8,8,24],"sp":0,"cmpval":10}
0x1552={"size":38,"jump":5695,"fail":5496,"traced":true,"ninstr":9,"op_pos":[7,10,15,18,22,25,28,32],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":24}
0x1578={"size":6,"jump":5606,"fail":5502,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":24,"cmpval":6}
0x157e={"size":36,"traced":true,"switch_op":{"addr":5535,"min":0,"max":0,"def":0,"cases":[{"addr":5606,"jump":5606,"value":0},{"addr":5538,"jump":5538,"value":1},{"addr":5550,"jump":5550,"value":2},{"addr":5562,"jump":5562,"value":3},{"addr":5574,"jump":5574,"value":4},{"addr":5586,"jump":5586,"value":5},{"addr":5596,"jump":5596,"value":6},{"addr":5606,"jump":5606,"value":0},{"addr":5538,"jump":5538,"value":1},{"addr":5550,"jump":5550,"value":2},{"addr":5562,"jump":5562,"value":3},{"addr":5574,"jump":5574,"value":4},{"addr":5586,"jump":5586,"value":5},{"addr":5596,"jump":5596,"value":6}]},"ninstr":8,"op_pos":[3,11,18,21,23,30,33],"sp_delta":[0,0,0,0,0,0,0,0],"sp":24}
0x15a2={"size":12,"jump":5606,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":24}
0x15ae={"size":12,"jump":5606,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":24}
0x15ba={"size":12,"jump":5606,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":24}
0x15c6={"size":12,"jump":5606,"traced":true,"ninstr":3,"op_pos":[5,10],"sp_delta":[0,0,0],"sp":24}
0x15d2={"size":10,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":24}
0x15dc={"size":10,"jump":5606,"traced":true,"ninstr":2,"op_pos":[5],"sp_delta":[0,0],"sp":24}
0x15e6={"size":89,"jump":5458,"traced":true,"ninstr":15,"op_pos":[7,12,19,24,31,36,43,48,55,60,67,72,79,84],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":24}
0x163f={"size":6,"jump":5458,"traced":true,"ninstr":2,"op_pos":[1],"sp_delta":[0,0],"sp":24}
0x1645={"size":162,"traced":true,"ninstr":34,"op_pos":[4,5,8,15,20,25,30,33,38,45,50,55,60,63,68,75,80,87,92,99,104,111,116,123,128,135,140,147,152,157,162,167,168],"sp_delta":[0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,-8],"sp":0}

/core/analysis/callables
_Exit=func
__libc_init_array=func
__stack_chk_fail=func
__tolower=func
__toupper=func
_exit=func
abort=func
abs=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
btowc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
clearerr=func
clock=func
close=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
entry.fini0=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fclose=func
feclearexcept=func
fegetenv=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetwc=func
fileno=func
floor=func
floorf=func
floorl=func
fpclassify=func
free=func
ftell=func
fts_close_INODE64=func
fts_read_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.entry.fini0.args=0
func.entry.fini0.ret=void
func.entry.init0.args=0
func.entry.init0.ret=void
func.entry0.arg.0=void *,rtld_fini
func.entry0.args=0x1
func.entry0.ret=void
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
getc=func
getchar=func
getenv=func
geteuid=func
getpid=func
getprogname=func
gets=func
getuid=func
getwc=func
getwchar=func
gmtime=func
humanize_number=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
inet_ntoa=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isinf=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
labs=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
malloc=func
mbsinit=func
mkstemp=func
mktemp=func
mktime=func
nan=func
nanf=func
nanl=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nl_langinfo=func
objc_enumerationMutation=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
pclose=func
perror=func
printf=func
putchar=func
puts=func
pututxline=func
putwchar=func
quick_exit=func
raise=func
rand=func
random=func
remove=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scanf=func
setjmp=func
setstate=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
strdup=func
strerror=func
strlen=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
unlink=func
usleep=func
wait=func
warn=func
warnx=func
wcslen=func
wctob=func
wctrans=func
wctype=func
wprintf=func
wscanf=func
xmalloc=func

/core/analysis/cc
amd64=cc
amd64syscall=cc
cc.amd64.arg0=rdi
cc.amd64.arg1=rsi
cc.amd64.arg10=xmm4
cc.amd64.arg2=rdx
cc.amd64.arg3=rcx
cc.amd64.arg4=r8
cc.amd64.arg5=r9
cc.amd64.arg6=xmm0
cc.amd64.arg7=xmm1
cc.amd64.arg8=xmm2
cc.amd64.arg9=xmm3
cc.amd64.maxargs=11
cc.amd64.ret=rax
cc.amd64syscall.arg0=rdi
cc.amd64syscall.arg1=rsi
cc.amd64syscall.arg2=rdx
cc.amd64syscall.arg3=r10
cc.amd64syscall.arg4=r8
cc.amd64syscall.arg5=r9
cc.amd64syscall.maxargs=6
cc.amd64syscall.ret=rax
cc.ms.arg0=rcx
cc.ms.arg1=rdx
cc.ms.arg2=r8
cc.ms.arg3=r9
cc.ms.argn=stack
cc.ms.maxargs=4
cc.ms.ret=rax
cc.reg.arg0=rdi
cc.reg.arg1=rsi
cc.reg.arg2=rdx
cc.reg.arg3=rcx
cc.reg.maxargs=4
cc.reg.ret=rdi
cc.swift.arg0=rdi
cc.swift.arg1=rsi
cc.swift.arg10=xmm4
cc.swift.arg2=rdx
cc.swift.arg3=rcx
cc.swift.arg4=r8
cc.swift.arg5=r9
cc.swift.arg6=xmm0
cc.swift.arg7=xmm1
cc.swift.arg8=xmm2
cc.swift.arg9=xmm3
cc.swift.error=r12
cc.swift.maxargs=11
cc.swift.ret=rax
cc.swift.self=r13
default.cc=amd64
ms=cc
reg=cc
swift=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x1000={"name":"fcn.00001000","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":8,"bp_frame":true,"bbs":[4096,4116,4118]}
0x10e0={"name":"fcn.000010e0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4320]}
0x10f0={"name":"sym.imp.free","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4336]}
0x1100={"name":"sym.imp.puts","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4352]}
0x1110={"name":"sym.imp.__stack_chk_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"noreturn":true,"bbs":[4368]}
0x1120={"name":"sym.imp.printf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4384]}
0x1130={"name":"sym.imp.fgetc","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4400]}
0x1140={"name":"sym.imp.read","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4416]}
0x1150={"name":"sym.imp.malloc","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4432]}
0x1160={"name":"sym.imp.realloc","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4448]}
0x1170={"name":"sym.imp.setvbuf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4464]}
0x1180={"name":"sym.imp.__isoc99_scanf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4480]}
0x1190={"name":"sym.imp.exit","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"noreturn":true,"bbs":[4496]}
0x11a0={"name":"entry0","bits":64,"type":1,"cc":"amd64","stack":8,"maxstack":8,"ninstr":12,"bp_frame":true,"bbs":[4512],"vars":[{"name":"rtld_fini","type":"void *","storage":{"type":"reg","reg":"rdx"},"accs":[{"off":6,"type":"r","reg":"rdx"}]}]}
0x11d0={"name":"fcn.000011d0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":9,"bp_frame":true,"bbs":[4560,4579,4591,4600]}
0x1240={"name":"entry.fini0","bits":64,"type":1,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":14,"bp_frame":true,"bp_off":8,"bbs":[4672,4685,4699,4711,4728]}
0x1280={"name":"entry.init0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":16,"bp_frame":true,"bbs":[4608,4644,4656,4664,4736]}
0x1289={"name":"loc","bits":64,"type":1,"cc":"amd64","stack":24,"maxstack":24,"ninstr":32,"bp_frame":true,"bp_off":8,"bbs":[4745,4820,4828,4852,4867,4872],"vars":[{"name":"canary","type":"int64_t","storage":{"type":"stack","stack":-16},"accs":[{"off":21,"type":"w","sp":-8,"reg":"rbp"},{"off":107,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"var_14h","type":"int64_t","storage":{"type":"stack","stack":-20},"accs":[{"off":44,"type":"r","sp":-12,"reg":"rbp"},{"off":68,"type":"r","sp":-12,"reg":"rbp"},{"off":75,"type":"r","sp":-12,"reg":"rbp"}]}]}
0x130a={"name":"size","bits":64,"type":1,"cc":"amd64","stack":24,"maxstack":24,"ninstr":22,"bp_frame":true,"bp_off":8,"bbs":[4874,4961,4966],"vars":[{"name":"canary","type":"int64_t","storage":{"type":"stack","stack":-16},"accs":[{"off":21,"type":"w","sp":-8,"reg":"rbp"},{"off":72,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"var_18h","type":"int64_t","storage":{"type":"stack","stack":-24},"accs":[{"off":44,"type":"r","sp":-16,"reg":"rbp"},{"off":68,"type":"r","sp":-16,"reg":"rbp"}]}]}
0x1368={"name":"alloc","bits":64,"type":1,"cc":"amd64","stack":40,"maxstack":40,"ninstr":26,"bp_frame":true,"bp_off":8,"bbs":[4968,4999,5059,5060],"vars":[{"name":"var_1ch","type":"uint64_t","storage":{"type":"stack","stack":-28},"accs":[{"off":22,"type":"w","sp":-20,"reg":"rbp"},{"off":25,"type":"r","sp":-20,"reg":"rbp"},{"off":61,"type":"r","sp":-20,"reg":"rbp"}]},{"name":"size","type":"size_t","storage":{"type":"stack","stack":-24},"accs":[{"off":41,"type":"w","sp":-16,"reg":"rbp"},{"off":45,"type":"r","sp":-16,"reg":"rbp"}]},{"name":"var_10h","type":"void *","storage":{"type":"stack","stack":-16},"accs":[{"off":57,"type":"w","sp":-8,"reg":"rbp"},{"off":81,"type":"r","sp":-8,"reg":"rbp"}]}]}
0x13c6={"name":"view","bits":64,"type":1,"cc":"amd64","stack":24,"maxstack":24,"ninstr":22,"bp_frame":true,"bp_off":8,"bbs":[5062,5093,5099,5133,5134],"vars":[{"name":"var_ch","type":"int64_t","storage":{"type":"stack","stack":-12},"accs":[{"off":22,"type":"w","sp":-4,"reg":"rbp"},{"off":25,"type":"r","sp":-4,"reg":"rbp"},{"off":31,"type":"r","sp":-4,"reg":"rbp"},{"off":37,"type":"r","sp":-4,"reg":"rbp"}]}]}
0x1410={"name":"fcn.00001410","bits":64,"type":1,"cc":"amd64","stack":40,"maxstack":40,"ninstr":39,"bp_frame":true,"bp_off":8,"bbs":[5136,5167,5239,5253,5283,5284],"vars":[{"name":"var_24h","type":"uint64_t","storage":{"type":"stack","stack":-36},"accs":[{"off":22,"type":"w","sp":-28,"reg":"rbp"},{"off":25,"type":"r","sp":-28,"reg":"rbp"},{"off":31,"type":"r","sp":-28,"reg":"rbp"},{"off":117,"type":"r","sp":-28,"reg":"rbp"}]},{"name":"ptr","type":"void *","storage":{"type":"stack","stack":-32},"accs":[{"off":55,"type":"w","sp":-24,"reg":"rbp"},{"off":77,"type":"r","sp":-24,"reg":"rbp"}]},{"name":"size","type":"size_t","storage":{"type":"stack","stack":-24},"accs":[{"off":69,"type":"w","sp":-16,"reg":"rbp"},{"off":73,"type":"r","sp":-16,"reg":"rbp"}]},{"name":"var_10h","type":"void *","storage":{"type":"stack","stack":-16},"accs":[{"off":92,"type":"w","sp":-8,"reg":"rbp"},{"off":96,"type":"r","sp":-8,"reg":"rbp"},{"off":137,"type":"r","sp":-8,"reg":"rbp"}]}]}
0x14a6={"name":"free","bits":64,"type":1,"cc":"amd64","stack":24,"maxstack":24,"ninstr":20,"bp_frame":true,"bp_off":8,"bbs":[5286,5317,5351,5352],"vars":[{"name":"var_ch","type":"uint64_t","storage":{"type":"stack","stack":-12},"accs":[{"off":22,"type":"w","sp":-4,"reg":"rbp"},{"off":25,"type":"r","sp":-4,"reg":"rbp"},{"off":31,"type":"r","sp":-4,"reg":"rbp"}]}]}
0x14ea={"name":"edit","bits":64,"type":1,"cc":"amd64","stack":24,"maxstack":24,"ninstr":26,"bp_frame":true,"bp_off":8,"bbs":[5354,5385,5443,5444],"vars":[{"name":"var_10h","type":"uint64_t","storage":{"type":"stack","stack":-16},"accs":[{"off":22,"type":"w","sp":-8,"reg":"rbp"},{"off":25,"type":"r","sp":-8,"reg":"rbp"},{"off":50,"type":"r","sp":-8,"reg":"rbp"}]},{"name":"var_ch","type":"int64_t","storage":{"type":"stack","stack":-12},"accs":[{"off":41,"type":"w","sp":-4,"reg":"rbp"},{"off":44,"type":"r","sp":-4,"reg":"rbp"}]}]}
0x1546={"name":"menu","bits":64,"type":1,"cc":"amd64","stack":24,"maxstack":24,"ninstr":56,"bp_frame":true,"bp_off":8,"noreturn":true,"bbs":[5446,5458,5496,5502,5538,5550,5562,5574,5586,5596,5606,5695],"vars":[{"name":"var_dh","type":"uint64_t","storage":{"type":"stack","stack":-13},"accs":[{"off":27,"type":"w","sp":-5,"reg":"rbp"},{"off":30,"type":"r","sp":-5,"reg":"rbp"},{"off":40,"type":"r","sp":-5,"reg":"rbp"}]},{"name":"var_ch","type":"uint64_t","storage":{"type":"stack","stack":-12},"accs":[{"off":37,"type":"w","sp":-4,"reg":"rbp"},{"off":50,"type":"r","sp":-4,"reg":"rbp"},{"off":56,"type":"r","sp":-4,"reg":"rbp"}]}]}
0x1645={"name":"main","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":34,"bp_frame":true,"bp_off":8,"bbs":[5701]}

/core/analysis/hints
0x20a8={"immbase":10}
0x20ac={"immbase":10}
0x20b0={"immbase":10}
0x20b4={"immbase":10}
0x20b8={"immbase":10}
0x20bc={"immbase":10}
0x20c0={"immbase":10}

/core/analysis/imports

/core/analysis/meta
0x1000=[{"type":"C","str":"[11] -r-x section size 27 named .init"}]
0x1020=[{"type":"C","str":"[12] -r-x section size 192 named .plt"}]
0x10e0=[{"type":"C","str":"[13] -r-x section size 16 named .plt.got"}]
0x10f0=[{"type":"C","str":"[14] -r-x section size 176 named .plt.sec"}]
0x11a0=[{"type":"C","str":"[15] -r-x section size 1477 named .text"}]
0x11a6=[{"type":"t","subtype":56,"str":"void *rtld_fini"}]
0x11a9=[{"type":"t","subtype":56,"str":"int argc"}]
0x11aa=[{"type":"t","subtype":56,"str":"char **ubp_av"}]
0x11b3=[{"type":"t","subtype":56,"str":"void *fini"}]
0x11ba=[{"type":"t","subtype":56,"str":"void *init"}]
0x11c1=[{"type":"t","subtype":56,"str":"void *main"}]
0x12a4=[{"type":"t","subtype":56,"str":"const char *format"}]
0x12bc=[{"type":"t","subtype":56,"str":"const char *format"}]
0x12dc=[{"type":"t","subtype":56,"str":"const char *format"}]
0x1325=[{"type":"t","subtype":56,"str":"const char *format"}]
0x133d=[{"type":"t","subtype":56,"str":"const char *format"}]
0x1399=[{"type":"t","subtype":56,"str":"size_t size"}]
0x1403=[{"type":"t","subtype":56,"str":"const char *s"}]
0x1461=[{"type":"t","subtype":56,"str":"size_t size"}]
0x1464=[{"type":"t","subtype":56,"str":"void *ptr"}]
0x1477=[{"type":"t","subtype":56,"str":"const char *s"}]
0x14dd=[{"type":"t","subtype":56,"str":"void *ptr"}]
0x1519=[{"type":"t","subtype":56,"str":"size_t nbyte"}]
0x1534=[{"type":"t","subtype":56,"str":"void *buf"}]
0x1537=[{"type":"t","subtype":56,"str":"int fildes"}]
0x1559=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x159f=[{"type":"C","subtype":56,"str":"switch table (7 cases) at 0x20a8"}]
0x15d2=[{"type":"t","subtype":56,"str":"int status"}]
0x15e6=[{"type":"t","subtype":56,"str":"const char *s"}]
0x15f2=[{"type":"t","subtype":56,"str":"const char *s"}]
0x15fe=[{"type":"t","subtype":56,"str":"const char *s"}]
0x160a=[{"type":"t","subtype":56,"str":"const char *s"}]
0x1616=[{"type":"t","subtype":56,"str":"const char *s"}]
0x1622=[{"type":"t","subtype":56,"str":"const char *s"}]
0x162e=[{"type":"t","subtype":56,"str":"const char *s"}]
0x1654=[{"type":"t","subtype":56,"str":"size_t size"}]
0x1659=[{"type":"t","subtype":56,"str":"int mode"}]
0x165e=[{"type":"t","subtype":56,"str":"char *buf"}]
0x1663=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x1672=[{"type":"t","subtype":56,"str":"size_t size"}]
0x1677=[{"type":"t","subtype":56,"str":"int mode"}]
0x167c=[{"type":"t","subtype":56,"str":"char *buf"}]
0x1681=[{"type":"t","subtype":56,"str":"FILE *stream"}]
0x1689=[{"type":"t","subtype":56,"str":"const char *s"}]
0x1695=[{"type":"t","subtype":56,"str":"const char *s"}]
0x16a1=[{"type":"t","subtype":56,"str":"const char *s"}]
0x16ad=[{"type":"t","subtype":56,"str":"const char *s"}]
0x16b9=[{"type":"t","subtype":56,"str":"const char *s"}]
0x16c5=[{"type":"t","subtype":56,"str":"const char *s"}]
0x16d1=[{"type":"t","subtype":56,"str":"const char *s"}]
0x1768=[{"type":"C","str":"[16] -r-x section size 13 named .fini"}]
0x2000=[{"type":"C","str":"[17] -r-- section size 196 named .rodata"}]
0x2004=[{"size":8,"type":"s","subtype":98,"str":"Where? "}]
0x200f=[{"size":12,"type":"s","subtype":98,"str":"Illegal idx"}]
0x201b=[{"size":7,"type":"s","subtype":98,"str":"size? "}]
0x2026=[{"size":16,"type":"s","subtype":98,"str":"Realloc failed\\n"}]
0x2036=[{"size":16,"type":"s","subtype":98,"str":"-----Options---"}]
0x2046=[{"size":16,"type":"s","subtype":98,"str":"-----Alloc-----"}]
0x2056=[{"size":16,"type":"s","subtype":98,"str":"-----Free------"}]
0x2066=[{"size":16,"type":"s","subtype":98,"str":"-----View------"}]
0x2076=[{"size":16,"type":"s","subtype":98,"str":"-----Edit------"}]
0x2086=[{"size":16,"type":"s","subtype":98,"str":"-----Exit------"}]
0x2096=[{"size":16,"type":"s","subtype":98,"str":"-----Resize----"}]
0x20a8=[{"size":4,"type":"d"}]
0x20ac=[{"size":4,"type":"d"}]
0x20b0=[{"size":4,"type":"d"}]
0x20b4=[{"size":4,"type":"d"}]
0x20b8=[{"size":4,"type":"d"}]
0x20bc=[{"size":4,"type":"d"}]
0x20c0=[{"size":4,"type":"d"}]
0x20c4=[{"type":"C","str":"[18] -r-- section size 132 named .eh_frame_hdr"}]
0x2148=[{"type":"C","str":"[19] -r-- section size 520 named .eh_frame"}]
0x318=[{"type":"C","str":"[00] -r-- section size 28 named .interp"}]
0x338=[{"type":"C","str":"[01] -r-- section size 32 named .note.gnu.property"}]
0x358=[{"type":"C","str":"[02] -r-- section size 36 named .note.gnu.build-id"}]
0x37c=[{"type":"C","str":"[03] -r-- section size 32 named .note.ABI-tag"}]
0x3a0=[{"type":"C","str":"[04] -r-- section size 48 named .gnu.hash"}]
0x3d0=[{"type":"C","str":"[05] -r-- section size 456 named .dynsym"}]
0x3d68=[{"size":8,"type":"d"},{"type":"C","str":"[20] -rw- section size 8 named .init_array"}]
0x3d70=[{"size":8,"type":"d"},{"type":"C","str":"[21] -rw- section size 8 named .fini_array"}]
0x3d78=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[22] -rw- section size 496 named .dynamic"}]
0x3d80=[{"size":8,"type":"d","str":"8"}]
0x3d88=[{"size":8,"type":"d","str":"8"}]
0x3d90=[{"size":8,"type":"d","str":"8"}]
0x3d98=[{"size":8,"type":"d","str":"8"}]
0x3da0=[{"size":8,"type":"d","str":"8"}]
0x3da8=[{"size":8,"type":"d","str":"8"}]
0x3db0=[{"size":8,"type":"d","str":"8"}]
0x3db8=[{"size":8,"type":"d","str":"8"}]
0x3dc0=[{"size":8,"type":"d","str":"8"}]
0x3dc8=[{"size":8,"type":"d","str":"8"}]
0x3dd0=[{"size":8,"type":"d","str":"8"}]
0x3dd8=[{"size":8,"type":"d","str":"8"}]
0x3de0=[{"size":8,"type":"d","str":"8"}]
0x3de8=[{"size":8,"type":"d","str":"8"}]
0x3df0=[{"size":8,"type":"d","str":"8"}]
0x3df8=[{"size":8,"type":"d","str":"8"}]
0x3e00=[{"size":8,"type":"d","str":"8"}]
0x3e08=[{"size":8,"type":"d","str":"8"}]
0x3e10=[{"size":8,"type":"d","str":"8"}]
0x3e18=[{"size":8,"type":"d","str":"8"}]
0x3e20=[{"size":8,"type":"d","str":"8"}]
0x3e28=[{"size":8,"type":"d","str":"8"}]
0x3e30=[{"size":8,"type":"d","str":"8"}]
0x3e38=[{"size":8,"type":"d","str":"8"}]
0x3e40=[{"size":8,"type":"d","str":"8"}]
0x3e48=[{"size":8,"type":"d","str":"8"}]
0x3e50=[{"size":8,"type":"d","str":"8"}]
0x3e58=[{"size":8,"type":"d","str":"8"}]
0x3e60=[{"size":8,"type":"d","str":"8"}]
0x3e68=[{"size":8,"type":"d","str":"8"}]
0x3e70=[{"size":8,"type":"d","str":"8"}]
0x3e78=[{"size":8,"type":"d","str":"8"}]
0x3e80=[{"size":8,"type":"d","str":"8"}]
0x3e88=[{"size":8,"type":"d","str":"8"}]
0x3e90=[{"size":8,"type":"d","str":"8"}]
0x3e98=[{"size":8,"type":"d","str":"8"}]
0x3ea0=[{"size":8,"type":"d","str":"8"}]
0x3ea8=[{"size":8,"type":"d","str":"8"}]
0x3eb0=[{"size":8,"type":"d","str":"8"}]
0x3eb8=[{"size":8,"type":"d","str":"8"}]
0x3ec0=[{"size":8,"type":"d","str":"8"}]
0x3ec8=[{"size":8,"type":"d","str":"8"}]
0x3ed0=[{"size":8,"type":"d","str":"8"}]
0x3ed8=[{"size":8,"type":"d","str":"8"}]
0x3ee0=[{"size":8,"type":"d","str":"8"}]
0x3ee8=[{"size":8,"type":"d","str":"8"}]
0x3ef0=[{"size":8,"type":"d","str":"8"}]
0x3ef8=[{"size":8,"type":"d","str":"8"}]
0x3f00=[{"size":8,"type":"d","str":"8"}]
0x3f08=[{"size":8,"type":"d","str":"8"}]
0x3f10=[{"size":8,"type":"d","str":"8"}]
0x3f18=[{"size":8,"type":"d","str":"8"}]
0x3f20=[{"size":8,"type":"d","str":"8"}]
0x3f28=[{"size":8,"type":"d","str":"8"}]
0x3f30=[{"size":8,"type":"d","str":"8"}]
0x3f38=[{"size":8,"type":"d","str":"8"}]
0x3f40=[{"size":8,"type":"d","str":"8"}]
0x3f48=[{"size":8,"type":"d","str":"8"}]
0x3f50=[{"size":8,"type":"d","str":"8"}]
0x3f58=[{"size":8,"type":"d","str":"8"}]
0x3f60=[{"size":8,"type":"d","str":"8"}]
0x3f68=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[23] -rw- section size 152 named .got"}]
0x3f70=[{"size":8,"type":"d","str":"8"}]
0x3f78=[{"size":8,"type":"d","str":"8"}]
0x3f80=[{"size":8,"type":"d"}]
0x3f88=[{"size":8,"type":"d"}]
0x3f90=[{"size":8,"type":"d"}]
0x3f98=[{"size":8,"type":"d"}]
0x3fa0=[{"size":8,"type":"d"}]
0x3fa8=[{"size":8,"type":"d"}]
0x3fb0=[{"size":8,"type":"d"}]
0x3fb8=[{"size":8,"type":"d"}]
0x3fc0=[{"size":8,"type":"d"}]
0x3fc8=[{"size":8,"type":"d"}]
0x3fd0=[{"size":8,"type":"d"}]
0x3fd8=[{"size":8,"type":"d"}]
0x3fe0=[{"size":8,"type":"d"}]
0x3fe8=[{"size":8,"type":"d"}]
0x3ff0=[{"size":8,"type":"d"}]
0x3ff8=[{"size":8,"type":"d"}]
0x4000=[{"type":"C","str":"[24] -rw- section size 16 named .data"}]
0x4008=[{"size":8,"type":"d"}]
0x4020=[{"type":"C","str":"[25] -rw- section size 288 named .bss"},{"size":8,"type":"d"}]
0x4030=[{"size":8,"type":"d"}]
0x4148=[{"size":8,"type":"d"}]
0x4150=[{"size":8,"type":"d"}]
0x4158=[{"size":8,"type":"d"}]
0x4160=[{"size":8,"type":"d"}]
0x4168=[{"size":8,"type":"d"}]
0x4170=[{"size":8,"type":"d"}]
0x4178=[{"size":8,"type":"d"}]
0x4180=[{"size":8,"type":"d"}]
0x4188=[{"size":8,"type":"d"}]
0x4190=[{"size":8,"type":"d"}]
0x4198=[{"size":8,"type":"d"}]
0x41a0=[{"size":8,"type":"d"}]
0x41a8=[{"size":8,"type":"d"}]
0x41b0=[{"size":8,"type":"d"}]
0x41b8=[{"size":8,"type":"d"}]
0x41c0=[{"size":8,"type":"d"}]
0x598=[{"type":"C","str":"[06] -r-- section size 246 named .dynstr"}]
0x68e=[{"type":"C","str":"[07] -r-- section size 38 named .gnu.version"}]
0x6b8=[{"type":"C","str":"[08] -r-- section size 64 named .gnu.version_r"}]
0x6f8=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[09] -r-- section size 240 named .rela.dyn"}]
0x700=[{"size":8,"type":"d","str":"8"}]
0x708=[{"size":8,"type":"d","str":"8"}]
0x710=[{"size":8,"type":"d","str":"8"}]
0x718=[{"size":8,"type":"d","str":"8"}]
0x720=[{"size":8,"type":"d","str":"8"}]
0x728=[{"size":8,"type":"d","str":"8"}]
0x730=[{"size":8,"type":"d","str":"8"}]
0x738=[{"size":8,"type":"d","str":"8"}]
0x740=[{"size":8,"type":"d","str":"8"}]
0x748=[{"size":8,"type":"d","str":"8"}]
0x750=[{"size":8,"type":"d","str":"8"}]
0x758=[{"size":8,"type":"d","str":"8"}]
0x760=[{"size":8,"type":"d","str":"8"}]
0x768=[{"size":8,"type":"d","str":"8"}]
0x770=[{"size":8,"type":"d","str":"8"}]
0x778=[{"size":8,"type":"d","str":"8"}]
0x780=[{"size":8,"type":"d","str":"8"}]
0x788=[{"size":8,"type":"d","str":"8"}]
0x790=[{"size":8,"type":"d","str":"8"}]
0x798=[{"size":8,"type":"d","str":"8"}]
0x7a0=[{"size":8,"type":"d","str":"8"}]
0x7a8=[{"size":8,"type":"d","str":"8"}]
0x7b0=[{"size":8,"type":"d","str":"8"}]
0x7b8=[{"size":8,"type":"d","str":"8"}]
0x7c0=[{"size":8,"type":"d","str":"8"}]
0x7c8=[{"size":8,"type":"d","str":"8"}]
0x7d0=[{"size":8,"type":"d","str":"8"}]
0x7d8=[{"size":8,"type":"d","str":"8"}]
0x7e0=[{"size":8,"type":"d","str":"8"}]
0x7e8=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[10] -r-- section size 264 named .rela.plt"}]
0x7f0=[{"size":8,"type":"d","str":"8"}]
0x7f8=[{"size":8,"type":"d","str":"8"}]
0x800=[{"size":8,"type":"d","str":"8"}]
0x808=[{"size":8,"type":"d","str":"8"}]
0x810=[{"size":8,"type":"d","str":"8"}]
0x818=[{"size":8,"type":"d","str":"8"}]
0x820=[{"size":8,"type":"d","str":"8"}]
0x828=[{"size":8,"type":"d","str":"8"}]
0x830=[{"size":8,"type":"d","str":"8"}]
0x838=[{"size":8,"type":"d","str":"8"}]
0x840=[{"size":8,"type":"d","str":"8"}]
0x848=[{"size":8,"type":"d","str":"8"}]
0x850=[{"size":8,"type":"d","str":"8"}]
0x858=[{"size":8,"type":"d","str":"8"}]
0x860=[{"size":8,"type":"d","str":"8"}]
0x868=[{"size":8,"type":"d","str":"8"}]
0x870=[{"size":8,"type":"d","str":"8"}]
0x878=[{"size":8,"type":"d","str":"8"}]
0x880=[{"size":8,"type":"d","str":"8"}]
0x888=[{"size":8,"type":"d","str":"8"}]
0x890=[{"size":8,"type":"d","str":"8"}]
0x898=[{"size":8,"type":"d","str":"8"}]
0x8a0=[{"size":8,"type":"d","str":"8"}]
0x8a8=[{"size":8,"type":"d","str":"8"}]
0x8b0=[{"size":8,"type":"d","str":"8"}]
0x8b8=[{"size":8,"type":"d","str":"8"}]
0x8c0=[{"size":8,"type":"d","str":"8"}]
0x8c8=[{"size":8,"type":"d","str":"8"}]
0x8d0=[{"size":8,"type":"d","str":"8"}]
0x8d8=[{"size":8,"type":"d","str":"8"}]
0x8e0=[{"size":8,"type":"d","str":"8"}]
0x8e8=[{"size":8,"type":"d","str":"8"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn
addr.1546.noreturn=true

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
access_perm=enum
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
enum.access_perm=F_OK,X_OK,W_OK,R_OK,WX_OK,RX_OK,RW_OK,RWX_OK
enum.access_perm.0x0=F_OK
enum.access_perm.0x1=X_OK
enum.access_perm.0x2=W_OK
enum.access_perm.0x3=WX_OK
enum.access_perm.0x4=R_OK
enum.access_perm.0x5=RX_OK
enum.access_perm.0x6=RW_OK
enum.access_perm.0x7=RWX_OK
enum.access_perm.F_OK=0x0
enum.access_perm.RWX_OK=0x7
enum.access_perm.RW_OK=0x6
enum.access_perm.RX_OK=0x5
enum.access_perm.R_OK=0x4
enum.access_perm.WX_OK=0x3
enum.access_perm.W_OK=0x2
enum.access_perm.X_OK=0x1
enum.sock_domain=AF_UNIX,AF_INET,AF_AX25,AF_IPX,AF_APPLETALK,AF_X25,AF_INET6,AF_DECnet,AF_KEY,AF_NETLINK,AF_PACKET,AF_RDS,AF_PPPOX,AF_LLC,AF_IB,AF_MPLS,AF_CAN,AF_TIPC,AF_BLUETOOTH,AF_ALG,AF_VSOCK,AF_KCM,AF_XDP
enum.sock_domain.0x1=AF_UNIX
enum.sock_domain.0x10=AF_INET6
enum.sock_domain.0x12=AF_DECnet
enum.sock_domain.0x15=AF_KEY
enum.sock_domain.0x16=AF_NETLINK
enum.sock_domain.0x17=AF_PACKET
enum.sock_domain.0x2=AF_INET
enum.sock_domain.0x21=AF_RDS
enum.sock_domain.0x24=AF_PPPOX
enum.sock_domain.0x26=AF_LLC
enum.sock_domain.0x27=AF_IB
enum.sock_domain.0x28=AF_MPLS
enum.sock_domain.0x29=AF_CAN
enum.sock_domain.0x3=AF_AX25
enum.sock_domain.0x30=AF_TIPC
enum.sock_domain.0x31=AF_BLUETOOTH
enum.sock_domain.0x38=AF_ALG
enum.sock_domain.0x4=AF_IPX
enum.sock_domain.0x40=AF_VSOCK
enum.sock_domain.0x41=AF_KCM
enum.sock_domain.0x44=AF_XDP
enum.sock_domain.0x5=AF_APPLETALK
enum.sock_domain.0x9=AF_X25
enum.sock_domain.AF_ALG=0x38
enum.sock_domain.AF_APPLETALK=0x5
enum.sock_domain.AF_AX25=0x3
enum.sock_domain.AF_BLUETOOTH=0x31
enum.sock_domain.AF_CAN=0x29
enum.sock_domain.AF_DECnet=0x12
enum.sock_domain.AF_IB=0x27
enum.sock_domain.AF_INET=0x2
enum.sock_domain.AF_INET6=0x10
enum.sock_domain.AF_IPX=0x4
enum.sock_domain.AF_KCM=0x41
enum.sock_domain.AF_KEY=0x15
enum.sock_domain.AF_LLC=0x26
enum.sock_domain.AF_MPLS=0x28
enum.sock_domain.AF_NETLINK=0x16
enum.sock_domain.AF_PACKET=0x17
enum.sock_domain.AF_PPPOX=0x24
enum.sock_domain.AF_RDS=0x21
enum.sock_domain.AF_TIPC=0x30
enum.sock_domain.AF_UNIX=0x1
enum.sock_domain.AF_VSOCK=0x40
enum.sock_domain.AF_X25=0x9
enum.sock_domain.AF_XDP=0x44
enum.sock_type=SOCK_STREAM,SOCK_DGRAM,SOCK_SEQPACKET,SOCK_RAW,SOCK_RDM,SOCK_PACKET,SOCK_DCCP
enum.sock_type.0x1=SOCK_DGRAM
enum.sock_type.0x2=SOCK_STREAM
enum.sock_type.0x3=SOCK_RAW
enum.sock_type.0x4=SOCK_RDM
enum.sock_type.0x5=SOCK_SEQPACKET
enum.sock_type.0x6=SOCK_DCCP
enum.sock_type.0x7=SOCK_PACKET
enum.sock_type.SOCK_DCCP=0x6
enum.sock_type.SOCK_DGRAM=0x1
enum.sock_type.SOCK_PACKET=0x7
enum.sock_type.SOCK_RAW=0x3
enum.sock_type.SOCK_RDM=0x4
enum.sock_type.SOCK_SEQPACKET=0x5
enum.sock_type.SOCK_STREAM=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sock_domain=enum
sock_type=enum
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=64
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=q
type.gid_t.size=64
type.gid_t.typeclass=Integral
type.id_t=q
type.id_t.size=64
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=q
type.intptr_t.size=64
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=q
type.pid_t.size=64
type.pid_t.typeclass=Integral
type.ptrdiff_t=q
type.ptrdiff_t.size=64
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=q
type.size_t.size=64
type.size_t.typeclass=Unsigned Integral
type.ssize_t=q
type.ssize_t.size=64
type.ssize_t.typeclass=Signed Integral
type.uid_t=q
type.uid_t.size=64
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=q
type.uintptr_t.size=64
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=q
type.unknown_t.size=64
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=64
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=enum __idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x1008=[{"to":16360,"type":"d"}]
0x1026=[{"to":16248,"type":"c"}]
0x1039=[{"to":4128,"type":"c"}]
0x1044=[{"to":1,"type":"d"}]
0x1049=[{"to":4128,"type":"c"}]
0x1054=[{"to":2,"type":"d"}]
0x1059=[{"to":4128,"type":"c"}]
0x1064=[{"to":3,"type":"d"}]
0x1069=[{"to":4128,"type":"c"}]
0x1074=[{"to":4,"type":"d"}]
0x1079=[{"to":4128,"type":"c"}]
0x1084=[{"to":5,"type":"d"}]
0x1089=[{"to":4128,"type":"c"}]
0x1094=[{"to":6,"type":"d"}]
0x1099=[{"to":4128,"type":"c"}]
0x10a4=[{"to":7,"type":"d"}]
0x10a9=[{"to":4128,"type":"c"}]
0x10b4=[{"to":8,"type":"d"}]
0x10b9=[{"to":4128,"type":"c"}]
0x10c4=[{"to":9,"type":"d"}]
0x10c9=[{"to":4128,"type":"c"}]
0x10d4=[{"to":10,"type":"d"}]
0x10d9=[{"to":4128,"type":"c"}]
0x10e4=[{"to":16376,"type":"c"}]
0x10f4=[{"to":16256,"type":"c"}]
0x1104=[{"to":16264,"type":"c"}]
0x1114=[{"to":16272,"type":"c"}]
0x1124=[{"to":16280,"type":"c"}]
0x1134=[{"to":16288,"type":"c"}]
0x1144=[{"to":16296,"type":"c"}]
0x1154=[{"to":16304,"type":"c"}]
0x1164=[{"to":16312,"type":"c"}]
0x1174=[{"to":16320,"type":"c"}]
0x1184=[{"to":16328,"type":"c"}]
0x1194=[{"to":16336,"type":"c"}]
0x11b3=[{"to":1446,"type":"d"},{"to":5984,"type":"d"}]
0x11ba=[{"to":5872,"type":"d"},{"to":1327,"type":"d"}]
0x11c1=[{"to":1149,"type":"d"},{"to":5701,"type":"d"}]
0x11c8=[{"to":16352,"type":"C"}]
0x11d0=[{"to":16400,"type":"d"}]
0x11d7=[{"to":16400,"type":"d"}]
0x11e3=[{"to":16344,"type":"d"}]
0x1200=[{"to":16400,"type":"d"}]
0x1207=[{"to":16400,"type":"d"}]
0x1224=[{"to":16368,"type":"d"}]
0x1244=[{"to":16440,"type":"d"}]
0x124e=[{"to":16376,"type":"d"}]
0x125b=[{"to":16392,"type":"d"}]
0x1262=[{"to":4320,"type":"C"}]
0x1267=[{"to":4560,"type":"C"}]
0x126c=[{"to":16440,"type":"d"}]
0x1284=[{"to":4608,"type":"c"}]
0x12a4=[{"to":8196,"type":"d"}]
0x12b0=[{"to":4384,"type":"C"}]
0x12bc=[{"to":8204,"type":"d"}]
0x12c8=[{"to":4480,"type":"C"}]
0x12d7=[{"to":31,"type":"d"}]
0x12dc=[{"to":8207,"type":"d"}]
0x12e8=[{"to":4384,"type":"C"}]
0x12f2=[{"to":4852,"type":"c"}]
0x1303=[{"to":4368,"type":"C"}]
0x1325=[{"to":8219,"type":"d"}]
0x1331=[{"to":4384,"type":"C"}]
0x133d=[{"to":8226,"type":"d"}]
0x1349=[{"to":4480,"type":"C"}]
0x1361=[{"to":4368,"type":"C"}]
0x1379=[{"to":4745,"type":"C"}]
0x138c=[{"to":4874,"type":"C"}]
0x139c=[{"to":4432,"type":"C"}]
0x13b2=[{"to":16448,"type":"d"}]
0x13c1=[{"to":5060,"type":"c"}]
0x13d7=[{"to":4745,"type":"C"}]
0x13f8=[{"to":16448,"type":"d"}]
0x1406=[{"to":4352,"type":"C"}]
0x140b=[{"to":5134,"type":"c"}]
0x1421=[{"to":4745,"type":"C"}]
0x143c=[{"to":16448,"type":"d"}]
0x1450=[{"to":4874,"type":"C"}]
0x1467=[{"to":4448,"type":"C"}]
0x1477=[{"to":8230,"type":"d"}]
0x147e=[{"to":4352,"type":"C"}]
0x1483=[{"to":5284,"type":"c"}]
0x1492=[{"to":16448,"type":"d"}]
0x14a1=[{"to":5284,"type":"c"}]
0x14b7=[{"to":4745,"type":"C"}]
0x14d2=[{"to":16448,"type":"d"}]
0x14e0=[{"to":4336,"type":"C"}]
0x14e5=[{"to":5352,"type":"c"}]
0x14fb=[{"to":4745,"type":"C"}]
0x150e=[{"to":4874,"type":"C"}]
0x1529=[{"to":16448,"type":"d"}]
0x153c=[{"to":4416,"type":"C"}]
0x1541=[{"to":5444,"type":"c"}]
0x1552=[{"to":16432,"type":"d"}]
0x155c=[{"to":4400,"type":"C"}]
0x1568=[{"to":48,"type":"d"}]
0x1589=[{"to":8360,"type":"d"}]
0x1595=[{"to":8360,"type":"d"}]
0x159f=[{"to":5538,"type":"c"},{"to":5550,"type":"c"},{"to":5562,"type":"c"},{"to":5606,"type":"c"},{"to":5574,"type":"c"},{"to":5596,"type":"c"},{"to":5586,"type":"c"}]
0x15a7=[{"to":4968,"type":"C"}]
0x15ac=[{"to":5606,"type":"c"}]
0x15b3=[{"to":5286,"type":"C"}]
0x15b8=[{"to":5606,"type":"c"}]
0x15bf=[{"to":5062,"type":"C"}]
0x15c4=[{"to":5606,"type":"c"}]
0x15cb=[{"to":5354,"type":"C"}]
0x15d0=[{"to":5606,"type":"c"}]
0x15d7=[{"to":4496,"type":"C"}]
0x15e1=[{"to":5136,"type":"C"}]
0x15e6=[{"to":8246,"type":"d"}]
0x15ed=[{"to":4352,"type":"C"}]
0x15f2=[{"to":8262,"type":"d"}]
0x15f9=[{"to":4352,"type":"C"}]
0x15fe=[{"to":8278,"type":"d"}]
0x1605=[{"to":4352,"type":"C"}]
0x160a=[{"to":8294,"type":"d"}]
0x1611=[{"to":4352,"type":"C"}]
0x1616=[{"to":8310,"type":"d"}]
0x161d=[{"to":4352,"type":"C"}]
0x1622=[{"to":8326,"type":"d"}]
0x1629=[{"to":4352,"type":"C"}]
0x162e=[{"to":8342,"type":"d"}]
0x1635=[{"to":4352,"type":"C"}]
0x163a=[{"to":5458,"type":"c"}]
0x1640=[{"to":5458,"type":"c"}]
0x164d=[{"to":16416,"type":"d"}]
0x1666=[{"to":4464,"type":"C"}]
0x166b=[{"to":16432,"type":"d"}]
0x1684=[{"to":4464,"type":"C"}]
0x1689=[{"to":8246,"type":"d"}]
0x1690=[{"to":4352,"type":"C"}]
0x1695=[{"to":8262,"type":"d"}]
0x169c=[{"to":4352,"type":"C"}]
0x16a1=[{"to":8278,"type":"d"}]
0x16a8=[{"to":4352,"type":"C"}]
0x16ad=[{"to":8294,"type":"d"}]
0x16b4=[{"to":4352,"type":"C"}]
0x16b9=[{"to":8310,"type":"d"}]
0x16c0=[{"to":4352,"type":"C"}]
0x16c5=[{"to":8326,"type":"d"}]
0x16cc=[{"to":4352,"type":"C"}]
0x16d1=[{"to":8342,"type":"d"}]
0x16d8=[{"to":4352,"type":"C"}]
0x16e2=[{"to":5446,"type":"C"}]
0x16f6=[{"to":15720,"type":"d"}]
0x170d=[{"to":15728,"type":"d"}]
0x171c=[{"to":4096,"type":"C"}]
0x20e0=[{"to":240,"type":"d"}]
0x2193=[{"to":63,"type":"d"}]
0x219a=[{"to":34,"type":"d"}]
0x21d8=[{"to":240,"type":"d"}]

/core/config
analysis.apply.signature=true
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.jmp.tblmaxoffset=0x00001000
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.prelude.limit=0x01400000
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.resolve.pointers=true
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trap.after=false
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=64
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.il=false
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.debuginfo=false
asm.debuginfo.abspath=false
asm.debuginfo.file=true
asm.debuginfo.lines=true
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=true
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.hash=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=8
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.fold=none
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
basefind.alignment=0x00001000
basefind.max.threads=0
basefind.min.score=1
basefind.min.string=10
basefind.progress=false
basefind.search.end=0xf0000000
basefind.search.start=0
bin.at=false
bin.b64str=false
bin.baddr=0
bin.classes=true
bin.dbginfo=true
bin.dbginfo.debug_file_directory=/usr/lib/debug
bin.dbginfo.debuginfod=false
bin.dbginfo.debuginfod_urls=http://debuginfod.elfutils.org/
bin.debase64=false
bin.demangle=true
bin.demangle.flags=base
bin.demangle.libs=false
bin.filter=true
bin.hashes.default=md5,sha1,sha256,crc32,entropy
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.relocs=true
bin.strings=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=vi
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid1689941
cfg.wseek=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=true
dbg.hwbp=false
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=false
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=true
dbg.verbose=false
diff.bare=false
diff.from=0
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/home/dapa
dir.magic=/usr/share/rizin/magic
dir.plugins=/usr/lib/rizin/plugins
dir.prefix=/usr
dir.projects=/home/dapa/.local/share/rizin/projects
dir.types=/usr/include
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=false
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/mnt/windows/Users/dafaa/OneDrive/Documents/CTF/b0ilersc/PWN/easy-note/chal
file.loadalign=0x00000400
file.openmany=1
file.path=/mnt/windows/Users/dafaa/OneDrive/Documents/CTF/b0ilersc/PWN/easy-note/chal
file.type=elf
flirt.ignore.unknown=true
flirt.node.optimize=2
flirt.sig.deflate=false
flirt.sig.file=all
flirt.sig.library=Built with rizin 0.7.2
flirt.sig.os=all
flirt.sig.version=10
flirt.sigdb.load.extra=true
flirt.sigdb.load.home=true
flirt.sigdb.load.system=true
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.ropropagate=true
ghidra.sleighhome=/usr/lib/rizin/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=false
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dirlist=false
http.homeroot=/home/dapa/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxsize=0
http.port=9090
http.root=/usr/share/rizin/www
http.stop.after=0
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=false
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=true
log.colors=false
log.events=false
log.level=4
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/home/dapa/.local/share/rizin/pdb
prj.compress=false
prj.file=/mnt/windows/Users/dafaa/OneDrive/Documents/CTF/b0ilersc/PWN/easy-note/chal.rzdb
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
rzil.step.events.read=false
rzil.step.events.write=true
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=false
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.flag.only=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.visual.mode=0
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.case_sensitive=smart
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
str.search.buffer_size=0x00000800
str.search.check_ascii_freq=1
str.search.encoding=guess
str.search.max_region_size=0x00a00000
str.search.max_threads=0
str.search.max_uni_blocks=4
str.search.min_length=4
str.search.mode=auto
str.search.raw_alignment=0x00010000
str.search.reload=true
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/debug

/core/debug/breakpoints

/core/file
absolute=/mnt/windows/Users/dafaa/OneDrive/Documents/CTF/b0ilersc/PWN/easy-note/chal
raw=/mnt/windows/Users/dafaa/OneDrive/Documents/CTF/b0ilersc/PWN/easy-note/chal
relative=chal

/core/flags
base=0
realnames=1

/core/flags/flags
alloc={"realname":"alloc","demangled":false,"offset":4968,"size":94,"space":"functions"}
case.0x159f.0={"realname":"case.0x159f.0","demangled":false,"offset":5606,"size":1}
case.0x159f.1={"realname":"case.0x159f.1","demangled":false,"offset":5538,"size":1}
case.0x159f.2={"realname":"case.0x159f.2","demangled":false,"offset":5550,"size":1}
case.0x159f.3={"realname":"case.0x159f.3","demangled":false,"offset":5562,"size":1}
case.0x159f.4={"realname":"case.0x159f.4","demangled":false,"offset":5574,"size":1}
case.0x159f.5={"realname":"case.0x159f.5","demangled":false,"offset":5586,"size":1}
case.0x159f.6={"realname":"case.0x159f.6","demangled":false,"offset":5596,"size":1}
case.default.0x159f={"realname":"case.default.0x159f","demangled":false,"offset":5606,"size":1}
data.000016f0={"realname":"data.000016f0","demangled":false,"offset":5872,"size":8,"space":"pointers"}
data.00001760={"realname":"data.00001760","demangled":false,"offset":5984,"size":8,"space":"pointers"}
data.0000200c={"realname":"data.0000200c","demangled":false,"offset":8204,"size":8,"space":"pointers"}
data.00002022={"realname":"data.00002022","demangled":false,"offset":8226,"size":8,"space":"pointers"}
data.000020a8={"realname":"data.000020a8","demangled":false,"offset":8360,"size":8,"space":"pointers"}
data.00004008={"realname":"data.00004008","demangled":false,"offset":16392,"size":8,"space":"pointers"}
data.00004010={"realname":"data.00004010","demangled":false,"offset":16400,"size":8,"space":"pointers"}
data.00004038={"realname":"data.00004038","demangled":false,"offset":16440,"size":8,"space":"pointers"}
data.00004040={"realname":"data.00004040","demangled":false,"offset":16448,"size":8,"space":"pointers"}
edit={"realname":"edit","demangled":false,"offset":5354,"size":92,"space":"functions"}
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":4672,"size":57,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":4736,"size":9,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":4512,"size":46,"space":"symbols"}
fcn.00001000={"realname":"fcn.00001000","demangled":false,"offset":4096,"size":27,"space":"functions"}
fcn.000010e0={"realname":"fcn.000010e0","demangled":false,"offset":4320,"size":11,"space":"functions"}
fcn.000011d0={"realname":"fcn.000011d0","demangled":false,"offset":4560,"size":41,"space":"functions"}
fcn.00001410={"realname":"fcn.00001410","demangled":false,"offset":5136,"size":150,"space":"functions"}
free={"realname":"free","demangled":false,"offset":5286,"size":68,"space":"functions"}
loc={"realname":"loc","demangled":false,"offset":4745,"size":129,"space":"functions"}
main={"realname":"main","demangled":false,"offset":5701,"size":162,"space":"symbols"}
menu={"realname":"menu","demangled":false,"offset":5446,"size":255,"space":"functions"}
obj.stdin={"realname":"stdin","demangled":false,"offset":16432,"size":8,"space":"symbols"}
obj.stdout={"realname":"stdout","demangled":false,"offset":16416,"size":8,"space":"symbols"}
reloc._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16344,"size":8,"space":"relocs"}
reloc._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16368,"size":8,"space":"relocs"}
reloc.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16376,"size":8,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16360,"size":8,"space":"relocs"}
reloc.__isoc99_scanf={"realname":"__isoc99_scanf","demangled":false,"offset":16328,"size":8,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16352,"size":8,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16272,"size":8,"space":"relocs"}
reloc.exit={"realname":"exit","demangled":false,"offset":16336,"size":8,"space":"relocs"}
reloc.fgetc={"realname":"fgetc","demangled":false,"offset":16288,"size":8,"space":"relocs"}
reloc.free={"realname":"free","demangled":false,"offset":16256,"size":8,"space":"relocs"}
reloc.malloc={"realname":"malloc","demangled":false,"offset":16304,"size":8,"space":"relocs"}
reloc.printf={"realname":"printf","demangled":false,"offset":16280,"size":8,"space":"relocs"}
reloc.puts={"realname":"puts","demangled":false,"offset":16264,"size":8,"space":"relocs"}
reloc.read={"realname":"read","demangled":false,"offset":16296,"size":8,"space":"relocs"}
reloc.realloc={"realname":"realloc","demangled":false,"offset":16312,"size":8,"space":"relocs"}
reloc.setvbuf={"realname":"setvbuf","demangled":false,"offset":16320,"size":8,"space":"relocs"}
reloc.stdin={"realname":"stdin","demangled":false,"offset":16432,"size":8,"space":"relocs"}
reloc.stdout={"realname":"stdout","demangled":false,"offset":16416,"size":8,"space":"relocs"}
reloc.target._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16800,"size":8,"space":"relocs"}
reloc.target._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16824,"size":8,"space":"relocs"}
reloc.target.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16832,"size":8,"space":"relocs"}
reloc.target.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16816,"size":8,"space":"relocs"}
reloc.target.__isoc99_scanf={"realname":"__isoc99_scanf","demangled":false,"offset":16784,"size":8,"space":"relocs"}
reloc.target.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16808,"size":8,"space":"relocs"}
reloc.target.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16728,"size":8,"space":"relocs"}
reloc.target.exit={"realname":"exit","demangled":false,"offset":16792,"size":8,"space":"relocs"}
reloc.target.fgetc={"realname":"fgetc","demangled":false,"offset":16744,"size":8,"space":"relocs"}
reloc.target.free={"realname":"free","demangled":false,"offset":16712,"size":8,"space":"relocs"}
reloc.target.malloc={"realname":"malloc","demangled":false,"offset":16760,"size":8,"space":"relocs"}
reloc.target.printf={"realname":"printf","demangled":false,"offset":16736,"size":8,"space":"relocs"}
reloc.target.puts={"realname":"puts","demangled":false,"offset":16720,"size":8,"space":"relocs"}
reloc.target.read={"realname":"read","demangled":false,"offset":16752,"size":8,"space":"relocs"}
reloc.target.realloc={"realname":"realloc","demangled":false,"offset":16768,"size":8,"space":"relocs"}
reloc.target.setvbuf={"realname":"setvbuf","demangled":false,"offset":16776,"size":8,"space":"relocs"}
reloc.target.stdin={"realname":"stdin","demangled":false,"offset":16432,"size":8,"space":"relocs"}
reloc.target.stdout={"realname":"stdout","demangled":false,"offset":16416,"size":8,"space":"relocs"}
section..bss={"realname":"section..bss","demangled":false,"offset":16416,"size":288,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":16384,"size":16,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":15736,"size":496,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":1432,"size":246,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":976,"size":456,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":8520,"size":520,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":8388,"size":132,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":5992,"size":13,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":15728,"size":8,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":928,"size":48,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":1678,"size":38,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":1720,"size":64,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":16232,"size":152,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":4096,"size":27,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":15720,"size":8,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":792,"size":28,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":892,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":856,"size":36,"space":"sections"}
section..note.gnu.property={"realname":"section..note.gnu.property","demangled":false,"offset":824,"size":32,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":4128,"size":192,"space":"sections"}
section..plt.got={"realname":"section..plt.got","demangled":false,"offset":4320,"size":16,"space":"sections"}
section..plt.sec={"realname":"section..plt.sec","demangled":false,"offset":4336,"size":176,"space":"sections"}
section..rela.dyn={"realname":"section..rela.dyn","demangled":false,"offset":1784,"size":240,"space":"sections"}
section..rela.plt={"realname":"section..rela.plt","demangled":false,"offset":2024,"size":264,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":8192,"size":196,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":4512,"size":1477,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":15736,"size":496,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":8388,"size":132,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":15720,"size":664,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":792,"size":28,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":0,"size":2288,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":4096,"size":1909,"space":"segments"}
segment.LOAD2={"realname":"segment.LOAD2","demangled":false,"offset":8192,"size":848,"space":"segments"}
segment.LOAD3={"realname":"segment.LOAD3","demangled":false,"offset":15720,"size":984,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":824,"size":32,"space":"segments"}
segment.NOTE_0x358={"realname":"segment.NOTE_0x358","demangled":false,"offset":856,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":64,"size":728,"space":"segments"}
segment.UNKNOWN={"realname":"segment.UNKNOWN","demangled":false,"offset":824,"size":32,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":0,"size":64,"space":"segments"}
size={"realname":"size","demangled":false,"offset":4874,"size":94,"space":"functions"}
str.Alloc={"realname":"str.Alloc","demangled":false,"offset":8262,"size":16,"space":"strings"}
str.Edit={"realname":"str.Edit","demangled":false,"offset":8310,"size":16,"space":"strings"}
str.Exit={"realname":"str.Exit","demangled":false,"offset":8326,"size":16,"space":"strings"}
str.Free={"realname":"str.Free","demangled":false,"offset":8278,"size":16,"space":"strings"}
str.Illegal_idx={"realname":"str.Illegal_idx","demangled":false,"offset":8207,"size":12,"space":"strings"}
str.Options={"realname":"str.Options","demangled":false,"offset":8246,"size":16,"space":"strings"}
str.Realloc_failed={"realname":"str.Realloc_failed","demangled":false,"offset":8230,"size":16,"space":"strings"}
str.Resize={"realname":"str.Resize","demangled":false,"offset":8342,"size":16,"space":"strings"}
str.View={"realname":"str.View","demangled":false,"offset":8294,"size":16,"space":"strings"}
str.Where={"realname":"str.Where","demangled":false,"offset":8196,"size":8,"space":"strings"}
str.size={"realname":"str.size","demangled":false,"offset":8219,"size":7,"space":"strings"}
switch.0x0000159f={"realname":"switch.0x0000159f","demangled":false,"offset":5535,"size":1}
sym.imp.__isoc99_scanf={"realname":"__isoc99_scanf","demangled":false,"offset":4480,"size":11,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":4368,"size":11,"space":"imports"}
sym.imp.exit={"realname":"exit","demangled":false,"offset":4496,"size":11,"space":"imports"}
sym.imp.fgetc={"realname":"fgetc","demangled":false,"offset":4400,"size":11,"space":"imports"}
sym.imp.free={"realname":"free","demangled":false,"offset":4336,"size":11,"space":"imports"}
sym.imp.malloc={"realname":"malloc","demangled":false,"offset":4432,"size":11,"space":"imports"}
sym.imp.printf={"realname":"printf","demangled":false,"offset":4384,"size":11,"space":"imports"}
sym.imp.puts={"realname":"puts","demangled":false,"offset":4352,"size":11,"space":"imports"}
sym.imp.read={"realname":"read","demangled":false,"offset":4416,"size":11,"space":"imports"}
sym.imp.realloc={"realname":"realloc","demangled":false,"offset":4448,"size":11,"space":"imports"}
sym.imp.setvbuf={"realname":"setvbuf","demangled":false,"offset":4464,"size":11,"space":"imports"}
view={"realname":"view","demangled":false,"offset":5062,"size":74,"space":"functions"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
functions=s
imports=s
platform.ports=s
pointers=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones

/core/seek
-1={"offset":5567,"cursor":0,"current":false}
-10={"offset":5701,"cursor":0,"current":false}
-11={"offset":5446,"cursor":0,"current":false}
-12={"offset":4874,"cursor":0,"current":false}
-13={"offset":5062,"cursor":0,"current":false}
-14={"offset":5354,"cursor":0,"current":false}
-15={"offset":4672,"cursor":0,"current":false}
-16={"offset":4736,"cursor":0,"current":false}
-17={"offset":4512,"cursor":0,"current":false}
-18={"offset":4736,"cursor":0,"current":false}
-19={"offset":4096,"cursor":0,"current":false}
-2={"offset":5548,"cursor":0,"current":false}
-20={"offset":4320,"cursor":0,"current":false}
-21={"offset":4560,"cursor":0,"current":false}
-22={"offset":4096,"cursor":0,"current":false}
-23={"offset":4320,"cursor":0,"current":false}
-24={"offset":4560,"cursor":0,"current":false}
-25={"offset":5136,"cursor":0,"current":false}
-26={"offset":5354,"cursor":0,"current":false}
-27={"offset":5579,"cursor":0,"current":false}
-28={"offset":5601,"cursor":0,"current":false}
-29={"offset":5543,"cursor":0,"current":false}
-3={"offset":5572,"cursor":0,"current":false}
-30={"offset":5601,"cursor":0,"current":false}
-31={"offset":5579,"cursor":0,"current":false}
-32={"offset":5567,"cursor":0,"current":false}
-33={"offset":5555,"cursor":0,"current":false}
-34={"offset":5543,"cursor":0,"current":false}
-35={"offset":5468,"cursor":0,"current":false}
-36={"offset":5446,"cursor":0,"current":false}
-37={"offset":5858,"cursor":0,"current":false}
-38={"offset":5701,"cursor":0,"current":false}
-39={"offset":4512,"cursor":0,"current":false}
-4={"offset":5584,"cursor":0,"current":false}
-5={"offset":5560,"cursor":0,"current":false}
-6={"offset":5548,"cursor":0,"current":false}
-7={"offset":5567,"cursor":0,"current":false}
-8={"offset":5446,"cursor":0,"current":false}
-9={"offset":5858,"cursor":0,"current":false}
0={"offset":5584,"cursor":0,"current":true}
